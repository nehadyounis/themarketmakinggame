name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Build and test C++ engine
  engine:
    name: C++ Engine
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake python3 python3-dev python3-pip
        pip3 install pybind11
    
    - name: Build engine
      run: |
        cd engine
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON_BINDINGS=ON -DBUILD_TESTS=ON ..
        make -j$(nproc)
    
    - name: Run tests
      run: |
        cd engine/build
        ctest --output-on-failure
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: engine-build
        path: |
          engine/build/libmmg_engine.*
          engine/build/mmg_engine*.so
        retention-days: 7

  # Test Python gateway
  gateway:
    name: Python Gateway
    runs-on: ubuntu-latest
    needs: engine
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Download engine artifacts
      uses: actions/download-artifact@v4
      with:
        name: engine-build
        path: gateway/
    
    - name: Install dependencies
      run: |
        cd gateway
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Lint with flake8
      run: |
        cd gateway
        pip install flake8
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run tests
      run: |
        cd gateway
        pytest tests/ -v --cov=app --cov-report=xml || echo "No tests found"
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./gateway/coverage.xml
        flags: gateway

  # Build and test Flutter
  frontend:
    name: Flutter Web
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Get dependencies
      run: |
        cd frontend
        flutter pub get
    
    - name: Analyze
      run: |
        cd frontend
        flutter analyze
    
    - name: Run tests
      run: |
        cd frontend
        flutter test || echo "No tests found"
    
    - name: Build web
      run: |
        cd frontend
        flutter build web --release
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/web
        retention-days: 7

  # Build Docker images
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [engine, gateway, frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Build gateway image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/Dockerfile.gateway
        tags: mmg-gateway:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build nginx image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/Dockerfile.nginx
        tags: mmg-nginx:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

